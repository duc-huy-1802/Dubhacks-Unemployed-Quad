/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: real-bazz (https://sketchfab.com/real-bazz)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/second-3d-scan-89e9e2e03bca4aeca3bd967d34f84ce5
Title: Second 3d scan
*/


import React, { useRef } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useMotionValue, useSpring } from "motion/react";


export function Buddha({
  scale = 0.6,
  position = [0, -1, 0],
  rotation = [0, 0, 0],      // extra outer rotation you can control
  autoRotate = false,
  rotateAxis = "x",          // "x" | "y" | "z"
  speed = 0.5,               // radians per second
  ...props
}) {
  // Load your GLB (you already switched to /models/3D_Buddha.glb)
  const { nodes, materials } = useGLTF("/models/3D_Buddha.glb");
  const group = useRef();

  useFrame((_, delta) => {
    if (!autoRotate || !group.current) return;
    if (rotateAxis === "x") group.current.rotation.x += delta * speed;
    else if (rotateAxis === "z") group.current.rotation.z += delta * speed;
    else group.current.rotation.y += delta * speed; // default 'y'
  });

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      scale={scale}
      position={position}
      rotation={rotation}
    >
      {/* Many scans need this -90deg X tilt to stand upright. Keep it. */}
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.model_tex_u1_v1_0.geometry}
          material={materials.tex_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.model_tex_u1_v1_0_1.geometry}
          material={materials.tex_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.model_tex_u1_v1_0_2.geometry}
          material={materials.tex_u1_v1}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.model_tex_u1_v1_0_3.geometry}
          material={materials.tex_u1_v1}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/3D_Buddha.glb");
export default Buddha;